#!/usr/bin/env node

const fs = require('fs');

let files = [];
function findEveryTsFile(path) {
    const dirContent = fs.readdirSync(path);
    for (var i = 0; i < dirContent.length; i++) {
        const filename = path + dirContent[i];
        const stat = fs.lstatSync(filename);
        if (stat.isDirectory()) {
            files.concat(findEveryTsFile(filename + '/'));
        } else if (filename.endsWith('.ts')) {
            files.push(filename);
        }
    }
    return files;
}
//    0               1                                2                                 3
// node     scripts/generate-injectables-list.js       src/injectable-files-list.ts      src

//Stores current directory
const injectableFileName = process.argv[2];
const srcFolder = process.argv[3] + '/';

console.log('injectableFileName: ' + injectableFileName);
console.log('srcFolder: ' + srcFolder);

//Finds every .ts file
const typescriptFiles = findEveryTsFile(srcFolder);

//Checks if file has "@Injectable" decorator
const injectableCode = typescriptFiles.filter((filename) => {
                                    return filename.indexOf('test') === -1;
                                }).filter((filename) => {
                                    return fs.readFileSync(filename).indexOf('@Injectable') >= 0;
                                }).map((filename) => {
                                    filename = filename.replace('src', '.').replace('.ts', '');
                                    return 'try {\n' +
                                            '   require(\'' + filename + '\');\n' +
                                            '} catch (err) {\n ' +
                                            '   console.warn(`Error loading \''+filename+'\': ${err}`);' +
                                            '\n}';
                                }).join('\n');


const autogeneratedCode = '//Auto-Generated Code\n' + injectableCode;
fs.writeFileSync(injectableFileName, autogeneratedCode);
