name: outputExamples/singleRunOutput.yml
tests: []
valid: true
requisitions:
  -
    name: examples/stdin.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 50
          startTime: '2018-09-11T20:38:22.701Z'
          endTime: '2018-09-11T20:38:22.751Z'
        subscriptions: []
        startEvent:
          subscription:
            name: 'subscription description'
            type: standard-input
            tests:
              -
                name: payload
                valid: true
                description: 'Expected ''message'' to be equal to ''enqueuer standard-input payload''. Received ''enqueuer standard-input payload'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.706Z'
  -
    name: examples/udp.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 54
          startTime: '2018-09-11T20:38:22.702Z'
          endTime: '2018-09-11T20:38:22.756Z'
        subscriptions:
          -
            name: 'subscription description'
            type: udp
            tests:
              -
                name: Payload
                valid: true
                description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''
              -
                name: 'Remote Adderss'
                valid: true
                description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.706Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: udp
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.749Z'
  -
    name: examples/file.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 115
          startTime: '2018-09-11T20:38:22.658Z'
          endTime: '2018-09-11T20:38:22.773Z'
          timeout: 3000
        subscriptions:
          -
            name: 'subscription description'
            type: file-system-watcher
            tests:
              -
                name: 'Some time has passed'
                valid: true
                description: 'Expected ''now'' to be greater than or equal to ''1536698285786''. Received ''1536698302772'''
              -
                name: Filename
                valid: true
                description: '''name'' (temp/fileTest20180911173805083763_b0e4beb8.file) does not contain ''temp/'''
              -
                name: Content
                valid: true
                description: '''content'' is not defined'
              -
                name: Created
                valid: true
                description: '''created'' is not defined'
              -
                name: Modified
                valid: true
                description: '''modified'' is not defined'
              -
                name: Size
                valid: true
                description: 'Expected ''size'' to be greater than ''0''. Received ''13'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.704Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: file
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.722Z'
  -
    name: examples/sqs.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'requisition description'
        time:
          totalTime: 92
          startTime: '2018-09-11T20:38:22.701Z'
          endTime: '2018-09-11T20:38:22.793Z'
          timeout: 5000
        subscriptions:
          -
            name: 'subscription description'
            type: sqs
            tests:
              -
                name: Body
                valid: true
                description: '''Body'' (enqueuer) does not contain ''enq'''
              -
                name: MessageId
                valid: true
                description: '''MessageId'' is not defined'
              -
                name: ReceiptHandle
                valid: true
                description: '''ReceiptHandle'' is not defined'
              -
                name: MD5OfBody
                valid: true
                description: '''MD5OfBody'' is not defined'
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.705Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: sqs
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Request Id is all 000000'
                valid: true
                description: 'Expected ''ResponseMetadata.RequestId'' to be equal to ''00000000-0000-0000-0000-000000000000''. Received ''00000000-0000-0000-0000-000000000000'''
              -
                name: ResponseMetadata
                valid: true
                description: '''ResponseMetadata'' is not defined'
              -
                name: MD5
                valid: true
                description: '''MD5OfMessageBody'' is not defined'
              -
                name: MD5OfMessageAttributes
                valid: true
                description: '''MD5OfMessageAttributes'' is not defined'
              -
                name: MessageId
                valid: true
                description: '''MessageId'' is not defined'
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.793Z'
  -
    name: examples/hooks.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            name: 'Requisitions exists onInit'
            valid: true
            description: '''requisition'' is not defined'
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'requisition description'
        time:
          totalTime: 159
          startTime: '2018-09-11T20:38:22.659Z'
          endTime: '2018-09-11T20:38:22.818Z'
          timeout: 2000
        subscriptions:
          -
            name: 'subscription description'
            type: tcp-server
            tests:
              -
                name: 'Subscription exists onInit'
                valid: true
                description: '''subscription'' is not defined'
              -
                name: 'Subscription name'
                valid: true
                description: 'Expected ''subscription.name'' to be equal to ''changed''. Received ''changed'''
              -
                name: 'Subscription exists onMessageReceived'
                valid: true
                description: '''subscription'' is not defined'
              -
                name: 'Subscription name changed'
                valid: true
                description: 'Expected ''subscription.name'' to be equal to ''changed''. Received ''changed'''
              -
                name: 'Subscription onInit executed'
                valid: true
                description: '''store.sequence'' (requisition::onInit-> publisher::onInit-> subscription::onInit) does not contain ''subscription::onInit'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.706Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: tcp-client
            tests:
              -
                name: 'Publisher exists onInit'
                valid: true
                description: '''publisher'' is not defined'
              -
                name: 'Publisher name'
                valid: true
                description: '''[object Object]'' is not defined'
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Publisher exists onMessageReceived'
                valid: true
                description: '''publisher'' is not defined'
              -
                name: 'Requisition onInit'
                valid: true
                description: '''store.sequence'' (requisition::onInit-> publisher::onInit-> subscription::onInit) does not contain ''requisition::onInit'''
              -
                name: 'Publisher name changed'
                valid: true
                description: 'Expected ''publisher.name'' to be equal to ''changed''. Received ''changed'''
              -
                name: 'Publisher onInit executed'
                valid: true
                description: '''store.sequence'' (requisition::onInit-> publisher::onInit-> subscription::onInit) does not contain ''publisher::onInit'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.817Z'
  -
    name: examples/https.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 192
          startTime: '2018-09-11T20:38:22.664Z'
          endTime: '2018-09-11T20:38:22.856Z'
          timeout: 3000
        subscriptions:
          -
            name: 'Subscription #0'
            type: https-server
            tests:
              -
                name: 'Https payload'
                valid: true
                description: 'Expected ''JSON.parse(message.body).https'' to be equal to ''works!''. Received ''works!'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.723Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: https-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Status Code'
                valid: true
                description: 'Expected ''statusCode'' to be equal to ''200''. Received ''200'''
              -
                name: Body
                valid: true
                description: 'Expected ''body'' to be equal to ''https''. Received ''https'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.856Z'
  -
    name: examples/http-proxy.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 198
          startTime: '2018-09-11T20:38:22.660Z'
          endTime: '2018-09-11T20:38:22.858Z'
        subscriptions:
          -
            name: 'proxy server'
            type: http-proxy
            tests:
              -
                name: '"Basic" authentication prefix'
                valid: true
                description: 'Prefix "Basic" was found.'
              -
                name: '"Basic" authentication user'
                valid: true
                description: 'User found'
              -
                name: '"Basic" authentication password'
                valid: true
                description: 'Password matchs'
              -
                name: '"Basic" authentication'
                valid: true
                description: 'Basic authentication is valid'
              -
                name: Payload
                valid: true
                description: 'Expected ''JSON.parse(message.body).proxy'' to be equal to ''test''. Received ''test'''
              -
                name: Params
                valid: true
                description: 'Expected ''params.id'' to be equal to ''idValue''. Received ''idValue'''
              -
                name: Query
                valid: true
                description: 'Expected ''query.query'' to be equal to ''proxied''. Received ''proxied'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.723Z'
          -
            name: 'real server'
            type: http-server
            tests:
              -
                name: '"Basic" authentication prefix'
                valid: true
                description: 'Prefix "Basic" was found.'
              -
                name: '"Basic" authentication user'
                valid: true
                description: 'User found'
              -
                name: '"Basic" authentication password'
                valid: true
                description: 'Password matchs'
              -
                name: '"Basic" authentication'
                valid: true
                description: 'Basic authentication is valid'
              -
                name: Payload
                valid: true
                description: 'Expected ''JSON.parse(message.body).proxy'' to be equal to ''test''. Received ''test'''
              -
                name: Params
                valid: true
                description: 'Expected ''params.firstId'' to be equal to ''idValue''. Received ''idValue'''
              -
                name: Query
                valid: true
                description: 'Expected ''query.query'' to be equal to ''proxied''. Received ''proxied'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.723Z'
        startEvent:
          publisher:
            name: 'publisher proxy'
            valid: true
            type: http-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Status Code'
                valid: true
                description: 'Expected ''statusCode'' to be equal to ''333''. Received ''333'''
              -
                name: Body
                valid: true
                description: 'Expected ''body'' to be equal to ''responsePayload''. Received ''responsePayload'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.857Z'
  -
    name: examples/recursion.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        name: 'Requisition #0'
        valid: true
        tests: []
        startEvent: {}
        requisitions:
          -
            name: 'Requisition #0'
            valid: true
            tests: []
            startEvent: {}
            requisitions:
              -
                name: 'Requisition #0'
                valid: true
                tests: []
                startEvent: {}
                requisitions:
                  - {valid: true, tests: [], name: 'Requisition #0', time: {totalTime: 59, startTime: '2018-09-11T20:38:22.696Z', endTime: '2018-09-11T20:38:22.755Z'}, subscriptions: [{name: 'subscription description', type: udp, tests: [{name: Payload, valid: true, description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''}, {name: 'Remote Adderss', valid: true, description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''}, {valid: true, name: 'Message received', description: 'Subscription has received its message'}], valid: true, connectionTime: '2018-09-11T20:38:22.704Z'}], startEvent: {publisher: {name: 'publisher description', valid: true, type: udp, tests: [{name: Published, valid: true, description: 'Published successfully'}], publishTime: '2018-09-11T20:38:22.749Z'}}}
                  - {valid: true, tests: [], name: 'Requisition #1', time: {totalTime: 29, startTime: '2018-09-11T20:38:22.769Z', endTime: '2018-09-11T20:38:22.798Z'}, subscriptions: [{name: 'subscription description', type: udp, tests: [{name: Payload, valid: true, description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''}, {name: 'Remote Adderss', valid: true, description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''}, {valid: true, name: 'Message received', description: 'Subscription has received its message'}], valid: true, connectionTime: '2018-09-11T20:38:22.770Z'}], startEvent: {publisher: {name: 'publisher description', valid: true, type: udp, tests: [{name: Published, valid: true, description: 'Published successfully'}], publishTime: '2018-09-11T20:38:22.795Z'}}}
              -
                valid: true
                tests: []
                name: 'Requisition #0'
                time:
                  totalTime: 22
                  startTime: '2018-09-11T20:38:22.813Z'
                  endTime: '2018-09-11T20:38:22.835Z'
                subscriptions:
                  - {name: 'subscription description', type: udp, tests: [{name: Payload, valid: true, description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''}, {name: 'Remote Adderss', valid: true, description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''}, {valid: true, name: 'Message received', description: 'Subscription has received its message'}], valid: true, connectionTime: '2018-09-11T20:38:22.814Z'}
                startEvent:
                  publisher: {name: 'publisher description', valid: true, type: udp, tests: [{name: Published, valid: true, description: 'Published successfully'}], publishTime: '2018-09-11T20:38:22.832Z'}
          -
            valid: true
            tests: []
            name: 'Requisition #0'
            time:
              totalTime: 15
              startTime: '2018-09-11T20:38:22.838Z'
              endTime: '2018-09-11T20:38:22.853Z'
            subscriptions:
              -
                name: 'subscription description'
                type: udp
                tests:
                  - {name: Payload, valid: true, description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''}
                  - {name: 'Remote Adderss', valid: true, description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''}
                  - {valid: true, name: 'Message received', description: 'Subscription has received its message'}
                valid: true
                connectionTime: '2018-09-11T20:38:22.838Z'
            startEvent:
              publisher:
                name: 'publisher description'
                valid: true
                type: udp
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.852Z'
      -
        valid: true
        tests:
          -
            name: 'Last one was executed'
            valid: true
            description: '''store.lastExecution'' is not defined'
        name: 'Requisition #0'
        time:
          totalTime: 11
          startTime: '2018-09-11T20:38:22.862Z'
          endTime: '2018-09-11T20:38:22.873Z'
        subscriptions:
          -
            name: 'subscription description'
            type: udp
            tests:
              -
                name: Payload
                valid: true
                description: 'Expected ''payload'' to be equal to ''it''. Received ''it'''
              -
                name: 'Remote Adderss'
                valid: true
                description: 'Expected ''remoteInfo.address'' to be equal to ''127.0.0.1''. Received ''127.0.0.1'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.862Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: udp
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.872Z'
  -
    name: examples/kafka.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 199
          startTime: '2018-09-11T20:38:22.678Z'
          endTime: '2018-09-11T20:38:22.877Z'
          timeout: 8000
        subscriptions:
          -
            name: 'subscription description'
            type: kafka
            tests:
              -
                name: payload
                valid: true
                description: 'Expected ''value'' to be equal to ''kafkaPayload''. Received ''kafkaPayload'''
              -
                name: topic
                valid: true
                description: 'Expected ''topic'' to be equal to ''enqueuer-topic-name''. Received ''enqueuer-topic-name'''
              -
                name: offset
                valid: true
                description: '''offset'' is not defined'
              -
                name: partition
                valid: true
                description: '''partition'' is not defined'
              -
                name: timestamp
                valid: true
                description: '''timestamp'' is not defined'
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.845Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: kafka
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'kafka publish response payload'
                valid: true
                description: '''`enqueuer-topic-name`'' is not defined'
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.870Z'
  -
    name: examples/zeromq-pubsub.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 152
          startTime: '2018-09-11T20:38:22.734Z'
          endTime: '2018-09-11T20:38:22.886Z'
        subscriptions:
          -
            name: 'subscription description'
            type: zero-mq-sub
            tests:
              -
                name: topic
                valid: true
                description: 'Expected ''topic'' to be equal to ''topic.enqueuer.virgs''. Received ''topic.enqueuer.virgs'''
              -
                name: payload
                valid: true
                description: 'Expected ''payload'' to be equal to ''enqueuer zeroes''. Received ''enqueuer zeroes'''
              -
                name: address
                valid: true
                description: 'Expected ''store.zeroMqAddress'' to be equal to ''tcp://127.0.0.1:3000''. Received ''tcp://127.0.0.1:3000'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.884Z'
        startEvent:
          publisher:
            name: publisher
            valid: true
            type: zero-mq-pub
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.885Z'
  -
    name: examples/amqp.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 244
          startTime: '2018-09-11T20:38:22.648Z'
          endTime: '2018-09-11T20:38:22.892Z'
          timeout: 5000
        subscriptions:
          -
            name: 'subscription description'
            type: amqp
            tests:
              -
                name: Payload
                valid: true
                description: 'Expected ''payload.how.about'' to be equal to ''a new object?''. Received ''a new object?'''
              -
                name: Header
                valid: true
                description: 'Expected ''headers.key'' to be equal to ''value''. Received ''value'''
              -
                name: 'Other Header Value'
                valid: true
                description: 'Expected ''headers.otherKey'' to be equal to ''otherValue''. Received ''otherValue'''
              -
                name: 'Routing Key'
                valid: true
                description: 'Expected ''deliveryInfo.routingKey'' to be equal to ''enqueuer.integration.test.routing.key''. Received ''enqueuer.integration.test.routing.key'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.864Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: amqp
            tests:
              -
                name: 'Assertion #0'
                valid: true
                description: 'Expected ''publisher.options.port'' to be equal to ''5672''. Received ''5672'''
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.889Z'
  -
    name: examples/stomp.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 196
          startTime: '2018-09-11T20:38:22.702Z'
          endTime: '2018-09-11T20:38:22.898Z'
          timeout: 3000
        subscriptions:
          -
            name: 'subscription description'
            type: stomp
            tests:
              -
                name: Payload
                valid: true
                description: 'Expected ''payload'' to be equal to ''stompQueue''. Received ''stompQueue'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.803Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: stomp
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.894Z'
  -
    name: examples/mqtt.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 221
          startTime: '2018-09-11T20:38:22.678Z'
          endTime: '2018-09-11T20:38:22.899Z'
        subscriptions:
          -
            name: 'subscription description'
            type: mqtt
            tests:
              -
                name: Payload
                valid: true
                description: 'Expected ''payload'' to be equal to ''enqueuer''. Received ''enqueuer'''
              -
                name: Topic
                valid: true
                description: 'Expected ''topic'' to be equal to ''enqueuer/integration/public/test''. Received ''enqueuer/integration/public/test'''
              -
                name: 'Beatles song'
                valid: true
                description: 'Expected ''payload.length'' to be greater than ''5''. Received ''8'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.820Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: mqtt
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:22.896Z'
  -
    name: examples/parallel-sub.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 451
          startTime: '2018-09-11T20:38:22.696Z'
          endTime: '2018-09-11T20:38:23.147Z'
          timeout: 3000
        subscriptions: []
        startEvent:
          subscription:
            name: 'subscription description'
            type: tcp-server
            tests:
              -
                name: Paralleling
                valid: true
                description: 'Expected ''payload'' to be equal to ''anything''. Received ''anything'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.731Z'
  -
    name: examples/parallel-pub.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'requisition description'
        time:
          totalTime: 3
          startTime: '2018-09-11T20:38:23.145Z'
          endTime: '2018-09-11T20:38:23.148Z'
          timeout: 3000
        subscriptions: []
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: tcp-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Back and forth'
                valid: true
                description: 'Expected ''payload'' to be equal to ''anyValue''. Received ''anyValue'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:23.148Z'
  -
    name: examples/tcp.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 117
          startTime: '2018-09-11T20:38:22.702Z'
          endTime: '2018-09-11T20:38:22.819Z'
          timeout: 3000
        subscriptions:
          -
            name: 'Subscription #0'
            type: tcp-server
            tests:
              -
                name: 'Beatles Song'
                valid: true
                description: 'Expected ''payload'' to be equal to ''Hey Jude''. Received ''Hey Jude'''
              -
                name: 'Assertion #1'
                valid: true
                description: '''stream.address'' (::ffff:127.0.0.1) does not contain ''127.0.0.1'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.706Z'
        startEvent:
          publisher:
            name: 'Start event publisher'
            valid: true
            type: tcp-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Do not make it bad'
                valid: true
                description: 'Expected ''payload'' to be equal to ''Do not make it bad''. Received ''Do not make it bad'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.819Z'
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #1'
        time:
          totalTime: 826
          startTime: '2018-09-11T20:38:22.827Z'
          endTime: '2018-09-11T20:38:23.653Z'
          timeout: 3000
        subscriptions:
          -
            name: 'tcp 1 subscription description'
            type: tcp-server
            tests:
              -
                name: 'I care'
                valid: true
                description: 'Expected ''payload'' to be equal to ''I do not care''. Received ''I do not care'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.829Z'
        startEvent:
          publisher:
            name: 'tcp 1 publisher description'
            valid: true
            type: tcp-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Greeting received'
                valid: true
                description: 'Expected ''payload'' to be equal to ''EnqueuerRocks''. Received ''EnqueuerRocks'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:23.652Z'
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #2'
        time:
          totalTime: 2
          startTime: '2018-09-11T20:38:23.655Z'
          endTime: '2018-09-11T20:38:23.657Z'
          timeout: 3000
        subscriptions:
          -
            name: 'tcp 2 subscription description'
            type: tcp-server
            tests:
              -
                name: 'It is still open'
                valid: true
                description: 'Expected ''payload'' to be equal to ''The socket is still open''. Received ''The socket is still open'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:23.655Z'
        startEvent:
          publisher:
            name: 'Start event publisher'
            valid: true
            type: tcp-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Second message is enqueuer Rocks'
                valid: true
                description: 'Expected ''payload'' to be equal to ''enqueuer Rocks''. Received ''enqueuer Rocks'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:23.656Z'
  -
    name: examples/skipped.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0 iterator collection'
        time:
          startTime: '2018-09-11T20:38:22.698Z'
          endTime: '2018-09-11T20:38:23.710Z'
          totalTime: 1012
        subscriptions: []
        startEvent: {}
        requisitions:
          -
            valid: true
            tests: []
            name: 'Requisition #0 [0]'
            time:
              totalTime: 1012
              startTime: '2018-09-11T20:38:22.698Z'
              endTime: '2018-09-11T20:38:23.710Z'
            subscriptions: []
            startEvent:
              subscription:
                name: 'Start event subscription'
                type: tcp-server
                tests:
                  - {name: 'Assertion #0', valid: true, description: 'Expected ''store.executions'' to be equal to ''1''. Received ''1'''}
                  - {valid: true, name: 'Subscription avoided', description: 'Avoidable subscription has not received a message'}
                valid: true
                connectionTime: '2018-09-11T20:38:22.731Z'
          -
            valid: true
            tests:
              -
                valid: true
                name: 'Requisition skipped'
                description: 'There is no iterations set to this requisition'
            name: 'Requisition #0'
            time:
              startTime: '2018-09-11T20:38:23.710Z'
              endTime: '2018-09-11T20:38:23.710Z'
              totalTime: 0
            subscriptions: []
            startEvent: {}
  -
    name: examples/uds.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 90
          startTime: '2018-09-11T20:38:22.732Z'
          endTime: '2018-09-11T20:38:22.822Z'
          timeout: 3000
        subscriptions:
          -
            name: 'Subscription #0'
            type: uds
            tests:
              -
                name: 'Message received is enqueuer'
                valid: true
                description: 'Expected ''payload'' to be equal to ''enqueuer''. Received ''enqueuer'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.740Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: uds
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'It is bidirectional'
                valid: true
                description: 'Expected ''payload'' to be equal to ''responsePayload''. Received ''responsePayload'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.822Z'
      -
        valid: true
        tests: []
        name: 'UDS2 Name description'
        time:
          totalTime: 1014
          startTime: '2018-09-11T20:38:22.827Z'
          endTime: '2018-09-11T20:38:23.841Z'
        subscriptions:
          -
            name: 'udsSubscription2 description'
            type: uds
            tests:
              -
                name: 'Message received is enqueuer 2'
                valid: true
                description: 'Expected ''message.payload'' to be equal to ''enqueuer''. Received ''enqueuer'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.833Z'
        startEvent:
          publisher:
            name: 'udsPublisher2 description'
            valid: true
            type: uds
            tests:
              -
                name: 'Message to be published is enqueuer'
                valid: true
                description: 'Expected ''publisher.payload'' to be equal to ''enqueuer''. Received ''enqueuer'''
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:23.840Z'
      -
        valid: true
        tests: []
        name: 'udsStreamLoader description'
        time:
          totalTime: 2
          startTime: '2018-09-11T20:38:23.842Z'
          endTime: '2018-09-11T20:38:23.844Z'
        subscriptions:
          -
            name: 'Subscription #0'
            type: uds
            tests:
              -
                name: 'Publisher stream was still opened'
                valid: true
                description: 'Expected ''payload'' to be equal to ''I am still opened''. Received ''I am still opened'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:23.842Z'
        startEvent:
          publisher:
            name: 'udsStreamLoader publisher'
            valid: true
            type: uds
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Message received'
                valid: true
                description: 'Expected ''payload'' to be equal to ''I am still bidirectional''. Received ''I am still bidirectional'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:23.843Z'
  -
    name: examples/avoid.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'Requisition #0'
        time:
          totalTime: 2049
          startTime: '2018-09-11T20:38:22.658Z'
          endTime: '2018-09-11T20:38:24.707Z'
        subscriptions: []
        startEvent:
          subscription:
            name: 'Start event subscription'
            type: tcp-server
            tests:
              -
                valid: true
                name: 'Subscription avoided'
                description: 'Avoidable subscription has not received a message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.731Z'
  -
    name: examples/http.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #0'
        time:
          totalTime: 162
          startTime: '2018-09-11T20:38:22.663Z'
          endTime: '2018-09-11T20:38:22.825Z'
          timeout: 3000
        subscriptions:
          -
            name: 'subscription description'
            type: http-server
            tests:
              -
                name: '"Basic" authentication prefix'
                valid: true
                description: 'Prefix "Basic" was found.'
              -
                name: '"Basic" authentication user'
                valid: true
                description: 'User found'
              -
                name: '"Basic" authentication password'
                valid: true
                description: 'Password matchs'
              -
                name: '"Basic" authentication'
                valid: true
                description: 'Basic authentication is valid'
              -
                name: Payload
                valid: true
                description: 'Expected ''JSON.parse(message.body).enqueuer'' to be equal to ''virgs''. Received ''virgs'''
              -
                name: Params
                valid: true
                description: 'Expected ''params.firstId'' to be equal to ''idStuff''. Received ''idStuff'''
              -
                name: Query
                valid: true
                description: 'Expected ''query.query'' to be equal to ''0''. Received ''000'''
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.723Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: http-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Status Code'
                valid: true
                description: 'Expected ''statusCode'' to be equal to ''321''. Received ''321'''
              -
                name: Body
                valid: true
                description: 'Expected ''body'' to be equal to ''dynamically changed payload''. Received ''dynamically changed payload'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.824Z'
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'Requisition #1'
        time:
          totalTime: 38
          startTime: '2018-09-11T20:38:22.827Z'
          endTime: '2018-09-11T20:38:22.865Z'
          timeout: 5000
        subscriptions:
          -
            name: 'subscription description'
            type: http-server
            tests:
              -
                name: Payload
                valid: true
                description: '''JSON.parse(message.body).duplicated'' is not true. I swear'
              -
                valid: true
                name: 'Message received'
                description: 'Subscription has received its message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.830Z'
        startEvent:
          publisher:
            name: 'publisher description'
            valid: true
            type: http-client
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
              -
                name: 'Status Code'
                valid: true
                description: 'Expected ''statusCode'' to be equal to ''321''. Received ''321'''
              -
                name: Body
                valid: true
                description: 'Expected ''body'' to be equal to ''duplicatedResponsePayload''. Received ''duplicatedResponsePayload'''
              -
                name: 'Response message received'
                valid: true
                description: 'Response message was received'
            publishTime: '2018-09-11T20:38:22.865Z'
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'requisition 2 (port 23076)'
        time:
          totalTime: 1000
          startTime: '2018-09-11T20:38:22.868Z'
          endTime: '2018-09-11T20:38:23.868Z'
          timeout: 5000
        subscriptions: []
        startEvent:
          subscription:
            name: 'subscription description'
            type: http-server
            tests:
              -
                valid: true
                name: 'Subscription avoided'
                description: 'Avoidable subscription has not received a message'
            valid: true
            connectionTime: '2018-09-11T20:38:22.868Z'
      -
        valid: true
        tests:
          -
            valid: true
            name: 'No time out'
            description: 'Requisition has not timed out'
        name: 'check port releasing 23076)'
        time:
          totalTime: 1006
          startTime: '2018-09-11T20:38:23.870Z'
          endTime: '2018-09-11T20:38:24.876Z'
          timeout: 5000
        subscriptions: []
        startEvent:
          subscription:
            name: 'same port subscription'
            type: tcp-server
            tests:
              -
                valid: true
                name: 'Subscription avoided'
                description: 'Avoidable subscription has not received a message'
            valid: true
            connectionTime: '2018-09-11T20:38:23.870Z'
  -
    name: examples/requisition.yml
    valid: true
    tests: []
    startEvent: {}
    requisitions:
      -
        valid: true
        tests: []
        name: 'iterations iterator collection'
        time:
          startTime: '2018-09-11T20:38:22.698Z'
          endTime: '2018-09-11T20:38:22.852Z'
          totalTime: 154
        subscriptions: []
        startEvent: {}
        requisitions:
          -
            valid: true
            tests: []
            name: 'iterations [0]'
            time:
              totalTime: 10
              startTime: '2018-09-11T20:38:22.698Z'
              endTime: '2018-09-11T20:38:22.708Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.706Z'
          -
            valid: true
            tests: []
            name: 'iterations [1]'
            time:
              totalTime: 1
              startTime: '2018-09-11T20:38:22.735Z'
              endTime: '2018-09-11T20:38:22.736Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.735Z'
          -
            valid: true
            tests: []
            name: 'iterations [2]'
            time:
              totalTime: 0
              startTime: '2018-09-11T20:38:22.749Z'
              endTime: '2018-09-11T20:38:22.749Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.749Z'
          -
            valid: true
            tests: []
            name: 'iterations [3]'
            time:
              totalTime: 1
              startTime: '2018-09-11T20:38:22.769Z'
              endTime: '2018-09-11T20:38:22.770Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.770Z'
          -
            valid: true
            tests: []
            name: 'iterations [4]'
            time:
              totalTime: 0
              startTime: '2018-09-11T20:38:22.795Z'
              endTime: '2018-09-11T20:38:22.795Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.795Z'
          -
            valid: true
            tests: []
            name: 'iterations [5]'
            time:
              totalTime: 1
              startTime: '2018-09-11T20:38:22.813Z'
              endTime: '2018-09-11T20:38:22.814Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.814Z'
          -
            valid: true
            tests: []
            name: 'iterations [6]'
            time:
              totalTime: 2
              startTime: '2018-09-11T20:38:22.827Z'
              endTime: '2018-09-11T20:38:22.829Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.829Z'
          -
            valid: true
            tests: []
            name: 'iterations [7]'
            time:
              totalTime: 0
              startTime: '2018-09-11T20:38:22.838Z'
              endTime: '2018-09-11T20:38:22.838Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.838Z'
          -
            valid: true
            tests: []
            name: 'iterations [8]'
            time:
              totalTime: 0
              startTime: '2018-09-11T20:38:22.843Z'
              endTime: '2018-09-11T20:38:22.843Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.843Z'
          -
            valid: true
            tests: []
            name: 'iterations [9]'
            time:
              totalTime: 0
              startTime: '2018-09-11T20:38:22.852Z'
              endTime: '2018-09-11T20:38:22.852Z'
            subscriptions: []
            startEvent:
              publisher:
                name: 'Start event publisher'
                valid: true
                type: zero-mq-pub
                tests:
                  - {name: Published, valid: true, description: 'Published successfully'}
                publishTime: '2018-09-11T20:38:22.852Z'
      -
        valid: true
        tests:
          -
            name: 'It was executed 10 times'
            valid: true
            description: 'Expected ''store.iteration'' to be equal to ''9''. Received ''9'''
          -
            name: 'It delayed for at least ~3 seconds'
            valid: true
            description: 'Expected ''delayedTime + 50'' to be greater than ''3000''. Received ''3055'''
          -
            name: 'It delayed for no more than ~3 seconds'
            valid: true
            description: 'Expected ''delayedTime - 500'' to be less than ''3000''. Received ''2505'''
        name: delayed
        time:
          totalTime: 0
          startTime: '2018-09-11T20:38:25.857Z'
          endTime: '2018-09-11T20:38:25.857Z'
        subscriptions: []
        startEvent:
          publisher:
            name: 'Start event publisher'
            valid: true
            type: zero-mq-pub
            tests:
              -
                name: Published
                valid: true
                description: 'Published successfully'
            publishTime: '2018-09-11T20:38:25.857Z'
