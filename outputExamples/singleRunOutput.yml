{
  "name": "outputExamples/singleRunOutput.yml",
  "tests": [],
  "valid": true,
  "requisitions": [
    {
      "name": "examples/file-placeholder.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "name": "fileRead (yml)",
              "valid": true,
              "description": "Expected 'requisition.yml.key' to be equal to 'value'. Received 'value'"
            },
            {
              "name": "fileRead (.json)",
              "valid": true,
              "description": "Expected 'requisition.json.key' to be equal to 'value'. Received 'value'"
            },
            {
              "name": "fileRead (.csv)",
              "valid": true,
              "description": "Expected 'requisition.csv[1].title' to be equal to 'secondRow'. Received 'secondRow'"
            },
            {
              "name": "fileRead (.tsv)",
              "valid": true,
              "description": "Expected 'requisition.tsv[0].title' to be equal to 'virgs'. Received 'virgs'"
            },
            {
              "name": "fileRead (.js)",
              "valid": true,
              "description": "Expected 'store.scriptResult' to be equal to '40'. Received '40'"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 43,
            "startTime": "2018-09-25T03:50:28.997Z",
            "endTime": "2018-09-25T03:50:29.040Z"
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "it's not stored",
              "valid": true,
              "description": "'requisition.yml' is not undefined"
            }
          ],
          "name": "Requisition #1",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 1,
            "startTime": "2018-09-25T03:50:29.066Z",
            "endTime": "2018-09-25T03:50:29.067Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/skipped.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0 iterator collection",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "startTime": "2018-09-25T03:50:29.032Z",
            "endTime": "2018-09-25T03:50:29.061Z",
            "totalTime": 29
          },
          "requisitions": [
            {
              "valid": true,
              "tests": [],
              "name": "Requisition #0 [0]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 9,
                "startTime": "2018-09-25T03:50:29.032Z",
                "endTime": "2018-09-25T03:50:29.041Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "valid": true,
                  "name": "Requisition skipped",
                  "description": "There is no iterations set to this requisition"
                }
              ],
              "name": "Requisition #0",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "startTime": "2018-09-25T03:50:29.056Z",
                "endTime": "2018-09-25T03:50:29.056Z",
                "totalTime": 0
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "valid": true,
                  "name": "Requisition skipped",
                  "description": "There is no iterations set to this requisition"
                }
              ],
              "name": "Requisition #0",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "startTime": "2018-09-25T03:50:29.061Z",
                "endTime": "2018-09-25T03:50:29.061Z",
                "totalTime": 0
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "valid": true,
                  "name": "Requisition skipped",
                  "description": "There is no iterations set to this requisition"
                }
              ],
              "name": "Requisition #0",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "startTime": "2018-09-25T03:50:29.061Z",
                "endTime": "2018-09-25T03:50:29.061Z",
                "totalTime": 0
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "valid": true,
                  "name": "Requisition skipped",
                  "description": "There is no iterations set to this requisition"
                }
              ],
              "name": "Requisition #0",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "startTime": "2018-09-25T03:50:29.061Z",
                "endTime": "2018-09-25T03:50:29.061Z",
                "totalTime": 0
              },
              "requisitions": []
            }
          ]
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "Assertion #0",
              "valid": true,
              "description": "Expected 'store.executions' to be equal to '1'. Received '1'"
            }
          ],
          "name": "Requisition #1",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 1,
            "startTime": "2018-09-25T03:50:29.066Z",
            "endTime": "2018-09-25T03:50:29.067Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/store.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 5,
            "startTime": "2018-09-25T03:50:29.036Z",
            "endTime": "2018-09-25T03:50:29.041Z"
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "Payload",
              "valid": true,
              "description": "Expected '123' to be equal to '123'. Received '123'"
            }
          ],
          "name": "Requisition #1",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 1,
            "startTime": "2018-09-25T03:50:29.066Z",
            "endTime": "2018-09-25T03:50:29.067Z"
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "Payload",
              "valid": true,
              "description": "Expected '124' to be equal to '124'. Received '124'"
            }
          ],
          "name": "Requisition #2",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 0,
            "startTime": "2018-09-25T03:50:29.070Z",
            "endTime": "2018-09-25T03:50:29.070Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/stdin.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "standard-input",
              "tests": [
                {
                  "name": "payload",
                  "valid": true,
                  "description": "Expected 'message' to be equal to 'enqueuer standard-input payload'. Received 'enqueuer standard-input payload'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.039Z",
              "messageReceived": "enqueuer standard-input payload"
            }
          ],
          "publishers": [],
          "time": {
            "totalTime": 49,
            "startTime": "2018-09-25T03:50:29.035Z",
            "endTime": "2018-09-25T03:50:29.084Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/udp.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "udp",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'it'. Received 'it'"
                },
                {
                  "name": "Remote Adderss",
                  "valid": true,
                  "description": "Expected 'remoteInfo.address' to be equal to '127.0.0.1'. Received '127.0.0.1'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.039Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    105,
                    116
                  ]
                },
                "remoteInfo": {
                  "address": "127.0.0.1",
                  "family": "IPv4",
                  "port": 50522,
                  "size": 2
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "udp",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.083Z"
            }
          ],
          "time": {
            "totalTime": 51,
            "startTime": "2018-09-25T03:50:29.037Z",
            "endTime": "2018-09-25T03:50:29.088Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/recursion.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "name": "Requisition #0",
          "valid": true,
          "tests": [],
          "requisitions": [
            {
              "name": "Requisition #0",
              "valid": true,
              "tests": [],
              "requisitions": [
                {
                  "name": "Requisition #0",
                  "valid": true,
                  "tests": [],
                  "requisitions": [
                    {
                      "valid": true,
                      "tests": [],
                      "name": "Requisition #0",
                      "subscriptions": [],
                      "publishers": [],
                      "time": {
                        "totalTime": 8,
                        "startTime": "2018-09-25T03:50:29.032Z",
                        "endTime": "2018-09-25T03:50:29.040Z"
                      },
                      "requisitions": []
                    }
                  ]
                },
                {
                  "valid": true,
                  "tests": [],
                  "name": "Requisition #0",
                  "subscriptions": [],
                  "publishers": [],
                  "time": {
                    "totalTime": 1,
                    "startTime": "2018-09-25T03:50:29.066Z",
                    "endTime": "2018-09-25T03:50:29.067Z"
                  },
                  "requisitions": []
                }
              ]
            },
            {
              "valid": true,
              "tests": [],
              "name": "Requisition #0",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.082Z",
                "endTime": "2018-09-25T03:50:29.082Z"
              },
              "requisitions": []
            }
          ]
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "Last one was executed",
              "valid": true,
              "description": "'store.lastExecution' is not defined"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 1,
            "startTime": "2018-09-25T03:50:29.095Z",
            "endTime": "2018-09-25T03:50:29.096Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/file.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "file-system-watcher",
              "tests": [
                {
                  "name": "Some time has passed",
                  "valid": true,
                  "description": "Expected 'now' to be greater than or equal to '1537847317602'. Received '1537847429100'"
                },
                {
                  "name": "Filename",
                  "valid": true,
                  "description": "'name' (temp/fileTest20180925004837064889_67e80c09.file) does not contain 'temp/'"
                },
                {
                  "name": "Content",
                  "valid": true,
                  "description": "'content' is not defined"
                },
                {
                  "name": "Created",
                  "valid": true,
                  "description": "'created' is not defined"
                },
                {
                  "name": "Modified",
                  "valid": true,
                  "description": "'modified' is not defined"
                },
                {
                  "name": "Size",
                  "valid": true,
                  "description": "Expected 'size' to be greater than '0'. Received '13'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.039Z",
              "messageReceived": {
                "content": "1537847317602",
                "name": "temp/fileTest20180925004837064889_67e80c09.file",
                "size": 13,
                "modified": "2018-09-25T03:48:37.649Z",
                "created": "2018-09-25T03:48:37.649Z"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "file",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.054Z"
            }
          ],
          "time": {
            "totalTime": 104,
            "startTime": "2018-09-25T03:50:28.997Z",
            "endTime": "2018-09-25T03:50:29.101Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/sqs.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "requisition description",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "sqs",
              "tests": [
                {
                  "name": "Body",
                  "valid": true,
                  "description": "'Body' (enqueuer) does not contain 'enq'"
                },
                {
                  "name": "MessageId",
                  "valid": true,
                  "description": "'MessageId' is not defined"
                },
                {
                  "name": "ReceiptHandle",
                  "valid": true,
                  "description": "'ReceiptHandle' is not defined"
                },
                {
                  "name": "MD5OfBody",
                  "valid": true,
                  "description": "'MD5OfBody' is not defined"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.039Z",
              "messageReceived": {
                "MessageId": "0859b862-83f0-4b73-844d-2897a0af6f1c",
                "ReceiptHandle": "0859b862-83f0-4b73-844d-2897a0af6f1c#98545e7c-2d19-4e85-b130-5c3e4726528c",
                "MD5OfBody": "9dea6b5787a8fcdbd8db4505e4a1958b",
                "Body": "enqueuer"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "sqs",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Request Id is all 000000",
                  "valid": true,
                  "description": "Expected 'ResponseMetadata.RequestId' to be equal to '00000000-0000-0000-0000-000000000000'. Received '00000000-0000-0000-0000-000000000000'"
                },
                {
                  "name": "ResponseMetadata",
                  "valid": true,
                  "description": "'ResponseMetadata' is not defined"
                },
                {
                  "name": "MD5",
                  "valid": true,
                  "description": "'MD5OfMessageBody' is not defined"
                },
                {
                  "name": "MD5OfMessageAttributes",
                  "valid": true,
                  "description": "'MD5OfMessageAttributes' is not defined"
                },
                {
                  "name": "MessageId",
                  "valid": true,
                  "description": "'MessageId' is not defined"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.129Z",
              "messageReceived": {
                "ResponseMetadata": {
                  "RequestId": "00000000-0000-0000-0000-000000000000"
                },
                "MD5OfMessageBody": "9dea6b5787a8fcdbd8db4505e4a1958b",
                "MD5OfMessageAttributes": "d41d8cd98f00b204e9800998ecf8427e",
                "MessageId": "5055a0b8-bb81-4970-ae0f-4d3f7835d2fb"
              }
            }
          ],
          "time": {
            "totalTime": 95,
            "startTime": "2018-09-25T03:50:29.035Z",
            "endTime": "2018-09-25T03:50:29.130Z",
            "timeout": 5000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/hooks.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "name": "Requisitions exists onInit",
              "valid": true,
              "description": "'requisition' is not defined"
            },
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "requisition description",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "tcp-server",
              "tests": [
                {
                  "name": "Subscription exists onInit",
                  "valid": true,
                  "description": "'subscription' is not defined"
                },
                {
                  "name": "Subscription name",
                  "valid": true,
                  "description": "Expected 'subscription.name' to be equal to 'changed'. Received 'changed'"
                },
                {
                  "name": "Subscription exists onMessageReceived",
                  "valid": true,
                  "description": "'subscription' is not defined"
                },
                {
                  "name": "Subscription name changed",
                  "valid": true,
                  "description": "Expected 'subscription.name' to be equal to 'changed'. Received 'changed'"
                },
                {
                  "name": "Subscription onInit executed",
                  "valid": true,
                  "description": "'store.sequence' (requisition::onInit-> subscription::onInit-> publisher::onInit) does not contain 'subscription::onInit'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.040Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    105,
                    116
                  ]
                },
                "stream": {
                  "address": "::ffff:127.0.0.1",
                  "family": "IPv6",
                  "port": 23080
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "tcp-client",
              "tests": [
                {
                  "name": "Publisher exists onInit",
                  "valid": true,
                  "description": "'publisher' is not defined"
                },
                {
                  "name": "Publisher name",
                  "valid": true,
                  "description": "'publisher.name' is not defined"
                },
                {
                  "name": "Assertion #2",
                  "valid": true,
                  "description": "'publisher' is not defined"
                },
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Publisher exists onMessageReceived",
                  "valid": true,
                  "description": "'publisher' is not defined"
                },
                {
                  "name": "Requisition onInit",
                  "valid": true,
                  "description": "'store.sequence' (requisition::onInit-> subscription::onInit-> publisher::onInit) does not contain 'requisition::onInit'"
                },
                {
                  "name": "Publisher name changed",
                  "valid": true,
                  "description": "Expected 'publisher.name' to be equal to 'changed'. Received 'changed'"
                },
                {
                  "name": "Publisher onInit executed",
                  "valid": true,
                  "description": "'store.sequence' (requisition::onInit-> subscription::onInit-> publisher::onInit) does not contain 'publisher::onInit'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.155Z",
              "messageReceived": {
                "payload": "hook response",
                "stream": {
                  "address": "127.0.0.1",
                  "family": "IPv4",
                  "port": 55990
                }
              }
            }
          ],
          "time": {
            "totalTime": 157,
            "startTime": "2018-09-25T03:50:28.998Z",
            "endTime": "2018-09-25T03:50:29.155Z",
            "timeout": 2000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/http-auth-bearer.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "http-server",
              "tests": [
                {
                  "name": "\"Bearer\" authentication prefix",
                  "valid": true,
                  "description": "Prefix \"Bearer\" was found."
                },
                {
                  "name": "\"Bearer\" authentication token",
                  "valid": true,
                  "description": "Token match"
                },
                {
                  "name": "\"Bearer\" authentication",
                  "valid": true,
                  "description": "Bearer authentication is valid"
                },
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'message.body' to be equal to 'Rech'. Received 'Rech'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "authorization": "Bearer bearerToken",
                  "content-length": "4",
                  "host": "localhost:23067",
                  "connection": "close"
                },
                "params": {},
                "query": {},
                "body": "Rech"
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "http-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Body",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'responsePayload'. Received 'responsePayload'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.159Z",
              "messageReceived": {
                "statusCode": 321,
                "body": "responsePayload",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "15",
                  "etag": "W/\"f-V9sBEzo+y6k6sqGXsr1Ql2B0tAk\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "http:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:23067",
                    "port": "23067",
                    "hostname": "localhost",
                    "hash": null,
                    "search": null,
                    "query": null,
                    "pathname": "/bearer",
                    "path": "/bearer",
                    "href": "http://localhost:23067/bearer"
                  },
                  "method": "post",
                  "headers": {
                    "content-type": "application/json",
                    "authorization": "Bearer bearerToken",
                    "Content-Length": 4
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 157,
            "startTime": "2018-09-25T03:50:29.002Z",
            "endTime": "2018-09-25T03:50:29.159Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/http-auth-basic.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "http-server",
              "tests": [
                {
                  "name": "\"Basic\" authentication prefix",
                  "valid": true,
                  "description": "Prefix \"Basic\" was found."
                },
                {
                  "name": "\"Basic\" authentication user",
                  "valid": true,
                  "description": "User found"
                },
                {
                  "name": "\"Basic\" authentication password",
                  "valid": true,
                  "description": "Password match"
                },
                {
                  "name": "\"Basic\" authentication",
                  "valid": true,
                  "description": "Basic authentication is valid"
                },
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'message.body' to be equal to 'basic auth'. Received 'basic auth'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "authorization": "Basic dXNlcjpwYXNzd29yZA==",
                  "content-length": "10",
                  "host": "localhost:23068",
                  "connection": "close"
                },
                "params": {},
                "query": {},
                "body": "basic auth"
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "http-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'basic auth response'. Received 'basic auth response'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.160Z",
              "messageReceived": {
                "statusCode": 200,
                "body": "basic auth response",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "19",
                  "etag": "W/\"13-nGN7LEwCUKXpQoLxNqKZXSglYNc\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "http:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:23068",
                    "port": "23068",
                    "hostname": "localhost",
                    "hash": null,
                    "search": null,
                    "query": null,
                    "pathname": "/basic",
                    "path": "/basic",
                    "href": "http://localhost:23068/basic"
                  },
                  "method": "post",
                  "headers": {
                    "content-type": "application/json",
                    "authorization": "Basic dXNlcjpwYXNzd29yZA==",
                    "Content-Length": 10
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 161,
            "startTime": "2018-09-25T03:50:28.999Z",
            "endTime": "2018-09-25T03:50:29.160Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/uds.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "uds",
              "tests": [
                {
                  "name": "Message received is enqueuer",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'enqueuer'. Received 'enqueuer'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.067Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    101,
                    110,
                    113,
                    117,
                    101,
                    117,
                    101,
                    114
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "uds",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "It is bidirectional",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'responsePayload'. Received 'responsePayload'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.105Z",
              "messageReceived": {
                "payload": "responsePayload"
              }
            }
          ],
          "time": {
            "totalTime": 41,
            "startTime": "2018-09-25T03:50:29.064Z",
            "endTime": "2018-09-25T03:50:29.105Z",
            "timeout": 3000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [],
          "name": "UDS2 Name saver",
          "subscriptions": [
            {
              "name": "udsSubscription2 description",
              "type": "uds",
              "tests": [
                {
                  "name": "Message received is enqueuer 2",
                  "valid": true,
                  "description": "Expected 'message.payload' to be equal to 'enqueuer'. Received 'enqueuer'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.123Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    101,
                    110,
                    113,
                    117,
                    101,
                    117,
                    101,
                    114
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "udsPublisher2 description",
              "valid": true,
              "type": "uds",
              "tests": [
                {
                  "name": "Message to be published is enqueuer",
                  "valid": true,
                  "description": "Expected 'publisher.payload' to be equal to 'enqueuer'. Received 'enqueuer'"
                },
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.168Z",
              "messageReceived": {
                "payload": "{}"
              }
            }
          ],
          "time": {
            "totalTime": 45,
            "startTime": "2018-09-25T03:50:29.123Z",
            "endTime": "2018-09-25T03:50:29.168Z"
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [],
          "name": "udsStreamLoader description",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "uds",
              "tests": [
                {
                  "name": "Publisher stream was still opened",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'I am still opened'. Received 'I am still opened'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.169Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    73,
                    32,
                    97,
                    109,
                    32,
                    115,
                    116,
                    105,
                    108,
                    108,
                    32,
                    111,
                    112,
                    101,
                    110,
                    101,
                    100
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "udsStreamLoader publisher",
              "valid": true,
              "type": "uds",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Message received",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'I am still bidirectional'. Received 'I am still bidirectional'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.178Z",
              "messageReceived": {
                "payload": "I am still bidirectional"
              }
            }
          ],
          "time": {
            "totalTime": 9,
            "startTime": "2018-09-25T03:50:29.169Z",
            "endTime": "2018-09-25T03:50:29.178Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/https.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "https-server",
              "tests": [
                {
                  "name": "Https payload",
                  "valid": true,
                  "description": "Expected 'JSON.parse(message.body).https' to be equal to 'works!'. Received 'works!'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "content-length": "23",
                  "host": "localhost:4430",
                  "connection": "close"
                },
                "params": {},
                "query": {},
                "body": "{\n  \"https\": \"works!\"\n}"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "https-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Status Code",
                  "valid": true,
                  "description": "Expected 'statusCode' to be equal to '200'. Received '200'"
                },
                {
                  "name": "Body",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'https'. Received 'https'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.186Z",
              "messageReceived": {
                "statusCode": 200,
                "body": "https",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "5",
                  "etag": "W/\"5-w0N9vHwSVdOiHURNhuvy6SNMIr0\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "https:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:4430",
                    "port": "4430",
                    "hostname": "localhost",
                    "hash": null,
                    "search": null,
                    "query": null,
                    "pathname": "/enqueuer",
                    "path": "/enqueuer",
                    "href": "https://localhost:4430/enqueuer"
                  },
                  "method": "post",
                  "headers": {
                    "content-type": "application/json",
                    "Content-Length": 23
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 182,
            "startTime": "2018-09-25T03:50:29.005Z",
            "endTime": "2018-09-25T03:50:29.187Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/http-proxy.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "proxy server",
              "type": "http-proxy",
              "tests": [
                {
                  "name": "\"Basic\" authentication prefix",
                  "valid": true,
                  "description": "Prefix \"Basic\" was found."
                },
                {
                  "name": "\"Basic\" authentication user",
                  "valid": true,
                  "description": "User found"
                },
                {
                  "name": "\"Basic\" authentication password",
                  "valid": true,
                  "description": "Password match"
                },
                {
                  "name": "\"Basic\" authentication",
                  "valid": true,
                  "description": "Basic authentication is valid"
                },
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'JSON.parse(message.body).proxy' to be equal to 'test'. Received 'test'"
                },
                {
                  "name": "Params",
                  "valid": true,
                  "description": "Expected 'params.id' to be equal to 'idValue'. Received 'idValue'"
                },
                {
                  "name": "Query",
                  "valid": true,
                  "description": "Expected 'query.query' to be equal to 'proxied'. Received 'proxied'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "authorization": "Basic dXNlcjpwYXNzd29yZA==",
                  "content-length": "21",
                  "host": "localhost:23085",
                  "connection": "close",
                  "Content-Length": 21
                },
                "params": {
                  "id": "idValue"
                },
                "query": {
                  "query": "proxied"
                },
                "body": "{\n  \"proxy\": \"test\"\n}"
              }
            },
            {
              "name": "real server",
              "type": "http-server",
              "tests": [
                {
                  "name": "\"Basic\" authentication prefix",
                  "valid": true,
                  "description": "Prefix \"Basic\" was found."
                },
                {
                  "name": "\"Basic\" authentication user",
                  "valid": true,
                  "description": "User found"
                },
                {
                  "name": "\"Basic\" authentication password",
                  "valid": true,
                  "description": "Password match"
                },
                {
                  "name": "\"Basic\" authentication",
                  "valid": true,
                  "description": "Basic authentication is valid"
                },
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'JSON.parse(message.body).proxy' to be equal to 'test'. Received 'test'"
                },
                {
                  "name": "Params",
                  "valid": true,
                  "description": "Expected 'params.firstId' to be equal to 'idValue'. Received 'idValue'"
                },
                {
                  "name": "Query",
                  "valid": true,
                  "description": "Expected 'query.query' to be equal to 'proxied'. Received 'proxied'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "authorization": "Basic dXNlcjpwYXNzd29yZA==",
                  "content-length": "21",
                  "host": "localhost:23085",
                  "connection": "close"
                },
                "params": {
                  "firstId": "idValue"
                },
                "query": {
                  "query": "proxied"
                },
                "body": "{\n  \"proxy\": \"test\"\n}"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher proxy",
              "valid": true,
              "type": "http-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Status Code",
                  "valid": true,
                  "description": "Expected 'statusCode' to be equal to '333'. Received '333'"
                },
                {
                  "name": "Body",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'responsePayload'. Received 'responsePayload'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.188Z",
              "messageReceived": {
                "statusCode": 333,
                "body": "responsePayload",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "15",
                  "etag": "W/\"f-V9sBEzo+y6k6sqGXsr1Ql2B0tAk\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "http:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:23085",
                    "port": "23085",
                    "hostname": "localhost",
                    "hash": null,
                    "search": "?query=proxied",
                    "query": "query=proxied",
                    "pathname": "/proxy/idValue",
                    "path": "/proxy/idValue?query=proxied",
                    "href": "http://localhost:23085/proxy/idValue?query=proxied"
                  },
                  "method": "patch",
                  "headers": {
                    "content-type": "application/json",
                    "authorization": "Basic dXNlcjpwYXNzd29yZA==",
                    "Content-Length": 21
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 185,
            "startTime": "2018-09-25T03:50:29.003Z",
            "endTime": "2018-09-25T03:50:29.188Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/stomp.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "stomp",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'stompQueue'. Received 'stompQueue'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.131Z",
              "messageReceived": {
                "payload": "stompQueue",
                "headers": {
                  "destination": "/queue/stompQueue",
                  "message-id": "Q_/queue/stompQueue@@session-gmUu6pLL35AbNVQD0RanJA@@1",
                  "redelivered": "false",
                  "content-length": "10"
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "stomp",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.188Z"
            }
          ],
          "time": {
            "totalTime": 157,
            "startTime": "2018-09-25T03:50:29.036Z",
            "endTime": "2018-09-25T03:50:29.193Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/mqtt.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "mqtt",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'enqueuer'. Received 'enqueuer'"
                },
                {
                  "name": "Topic",
                  "valid": true,
                  "description": "Expected 'topic' to be equal to 'enqueuer/integration/public/test'. Received 'enqueuer/integration/public/test'"
                },
                {
                  "name": "Beatles song",
                  "valid": true,
                  "description": "Expected 'payload.length' to be greater than '5'. Received '8'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.156Z",
              "messageReceived": {
                "topic": "enqueuer/integration/public/test",
                "payload": {
                  "type": "Buffer",
                  "data": [
                    101,
                    110,
                    113,
                    117,
                    101,
                    117,
                    101,
                    114
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "mqtt",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.191Z"
            }
          ],
          "time": {
            "totalTime": 179,
            "startTime": "2018-09-25T03:50:29.018Z",
            "endTime": "2018-09-25T03:50:29.197Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/kafka.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "kafka",
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "Expected 'value' to be equal to 'kafkaPayload'. Received 'kafkaPayload'"
                },
                {
                  "name": "Assertion #1",
                  "valid": true,
                  "description": "Expected 'topic' to be equal to 'enqueuer-topic-name'. Received 'enqueuer-topic-name'"
                },
                {
                  "name": "Assertion #2",
                  "valid": true,
                  "description": "'offset' is not defined"
                },
                {
                  "name": "Assertion #3",
                  "valid": true,
                  "description": "'partition' is not defined"
                },
                {
                  "name": "Assertion #4",
                  "valid": true,
                  "description": "'timestamp' is not defined"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.183Z",
              "messageReceived": {
                "topic": "enqueuer-topic-name",
                "value": "kafkaPayload",
                "offset": 97,
                "partition": 0,
                "highWaterOffset": 98,
                "key": null,
                "timestamp": "2018-09-25T03:50:29.185Z"
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "kafka",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "kafka publish response payload",
                  "valid": true,
                  "description": "'JSON.parse(message)[\"enqueuer-topic-name\"]' is not defined"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.204Z",
              "messageReceived": "{\n  \"enqueuer-topic-name\": {\n    \"0\": 97\n  }\n}"
            }
          ],
          "time": {
            "totalTime": 191,
            "startTime": "2018-09-25T03:50:29.017Z",
            "endTime": "2018-09-25T03:50:29.208Z",
            "timeout": 8000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/amqp.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "amqp",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'payload.how.about' to be equal to 'a new object?'. Received 'a new object?'"
                },
                {
                  "name": "Header",
                  "valid": true,
                  "description": "Expected 'headers.key' to be equal to 'value'. Received 'value'"
                },
                {
                  "name": "Other Header Value",
                  "valid": true,
                  "description": "Expected 'headers.otherKey' to be equal to 'otherValue'. Received 'otherValue'"
                },
                {
                  "name": "Routing Key",
                  "valid": true,
                  "description": "Expected 'deliveryInfo.routingKey' to be equal to 'enqueuer.integration.test.routing.key'. Received 'enqueuer.integration.test.routing.key'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.175Z",
              "messageReceived": {
                "payload": {
                  "how": {
                    "about": "a new object?"
                  }
                },
                "headers": {
                  "key": "value",
                  "otherKey": "otherValue"
                },
                "deliveryInfo": {
                  "contentType": "application/json",
                  "headers": {
                    "key": "value",
                    "otherKey": "otherValue"
                  },
                  "queue": "di7FpWWO",
                  "deliveryTag": {
                    "type": "Buffer",
                    "data": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      1
                    ]
                  },
                  "redelivered": false,
                  "exchange": "enqueuer.exchange",
                  "routingKey": "enqueuer.integration.test.routing.key",
                  "consumerTag": "node-amqp-4902-0.4774275121883176"
                }
              }
            },
            {
              "name": "Subscription #1",
              "type": "amqp",
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "Expected 'data' to be equal to 'default exchange'. Received 'default exchange'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.171Z",
              "messageReceived": {
                "payload": {
                  "data": {
                    "type": "Buffer",
                    "data": [
                      100,
                      101,
                      102,
                      97,
                      117,
                      108,
                      116,
                      32,
                      101,
                      120,
                      99,
                      104,
                      97,
                      110,
                      103,
                      101
                    ]
                  },
                  "contentType": "application/octet-stream"
                },
                "headers": {},
                "deliveryInfo": {
                  "contentType": "application/octet-stream",
                  "queue": "enqueuer.default.exchange",
                  "deliveryTag": {
                    "type": "Buffer",
                    "data": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      1
                    ]
                  },
                  "redelivered": false,
                  "exchange": "",
                  "routingKey": "enqueuer.default.exchange",
                  "consumerTag": "node-amqp-4902-0.40512471414390494"
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "amqp",
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "Expected 'publisher.options.port' to be equal to '5672'. Received '5672'"
                },
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.216Z"
            },
            {
              "name": "default exchange",
              "valid": true,
              "type": "amqp",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.211Z"
            }
          ],
          "time": {
            "totalTime": 232,
            "startTime": "2018-09-25T03:50:28.985Z",
            "endTime": "2018-09-25T03:50:29.217Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/zeromq-pubsub.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "zero-mq-sub",
              "tests": [
                {
                  "name": "topic",
                  "valid": true,
                  "description": "Expected 'topic' to be equal to 'topic.enqueuer.virgs'. Received 'topic.enqueuer.virgs'"
                },
                {
                  "name": "payload",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'enqueuer zeroes'. Received 'enqueuer zeroes'"
                },
                {
                  "name": "address",
                  "valid": true,
                  "description": "Expected 'store.zeroMqAddress' to be equal to 'tcp://127.0.0.1:3000'. Received 'tcp://127.0.0.1:3000'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.215Z",
              "messageReceived": {
                "topic": {
                  "type": "Buffer",
                  "data": [
                    116,
                    111,
                    112,
                    105,
                    99,
                    46,
                    101,
                    110,
                    113,
                    117,
                    101,
                    117,
                    101,
                    114,
                    46,
                    118,
                    105,
                    114,
                    103,
                    115
                  ]
                },
                "payload": {
                  "type": "Buffer",
                  "data": [
                    101,
                    110,
                    113,
                    117,
                    101,
                    117,
                    101,
                    114,
                    32,
                    122,
                    101,
                    114,
                    111,
                    101,
                    115
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher",
              "valid": true,
              "type": "zero-mq-pub",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.216Z"
            }
          ],
          "time": {
            "totalTime": 154,
            "startTime": "2018-09-25T03:50:29.065Z",
            "endTime": "2018-09-25T03:50:29.219Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/parallel-sub.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "tcp-server",
              "tests": [
                {
                  "name": "Paralleling",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'anything'. Received 'anything'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.040Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    97,
                    110,
                    121,
                    116,
                    104,
                    105,
                    110,
                    103
                  ]
                },
                "stream": {
                  "address": "::ffff:127.0.0.1",
                  "family": "IPv6",
                  "port": 23081
                }
              }
            }
          ],
          "publishers": [],
          "time": {
            "totalTime": 452,
            "startTime": "2018-09-25T03:50:29.031Z",
            "endTime": "2018-09-25T03:50:29.483Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/parallel-pub.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "requisition description",
          "subscriptions": [],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "tcp-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Back and forth",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'anyValue'. Received 'anyValue'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.484Z",
              "messageReceived": {
                "payload": "anyValue",
                "stream": {
                  "address": "127.0.0.1",
                  "family": "IPv4",
                  "port": 56007
                }
              }
            }
          ],
          "time": {
            "totalTime": 2,
            "startTime": "2018-09-25T03:50:29.482Z",
            "endTime": "2018-09-25T03:50:29.484Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/tcp.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "tcp-server",
              "tests": [
                {
                  "name": "Beatles Song",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'Hey Jude'. Received 'Hey Jude'"
                },
                {
                  "name": "Assertion #1",
                  "valid": true,
                  "description": "'stream.address' (::ffff:127.0.0.1) does not contain '127.0.0.1'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.040Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    72,
                    101,
                    121,
                    32,
                    74,
                    117,
                    100,
                    101
                  ]
                },
                "stream": {
                  "address": "::ffff:127.0.0.1",
                  "family": "IPv6",
                  "port": 23069
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "tcp-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Do not make it bad",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'Do not make it bad'. Received 'Do not make it bad'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.157Z",
              "messageReceived": {
                "payload": "Do not make it bad",
                "stream": {
                  "address": "127.0.0.1",
                  "family": "IPv4",
                  "port": 55991
                }
              }
            }
          ],
          "time": {
            "totalTime": 121,
            "startTime": "2018-09-25T03:50:29.036Z",
            "endTime": "2018-09-25T03:50:29.157Z",
            "timeout": 3000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #1",
          "subscriptions": [
            {
              "name": "tcp 1 subscription description",
              "type": "tcp-server",
              "tests": [
                {
                  "name": "I care",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'I do not care'. Received 'I do not care'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.165Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    73,
                    32,
                    100,
                    111,
                    32,
                    110,
                    111,
                    116,
                    32,
                    99,
                    97,
                    114,
                    101
                  ]
                },
                "stream": {
                  "address": "::ffff:127.0.0.1",
                  "family": "IPv6",
                  "port": 23070
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "tcp 1 publisher description",
              "valid": true,
              "type": "tcp-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Greeting received",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'EnqueuerRocks'. Received 'EnqueuerRocks'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.990Z",
              "messageReceived": {
                "payload": "EnqueuerRocks",
                "stream": {
                  "address": "127.0.0.1",
                  "family": "IPv4",
                  "port": 56001
                }
              }
            }
          ],
          "time": {
            "totalTime": 826,
            "startTime": "2018-09-25T03:50:29.164Z",
            "endTime": "2018-09-25T03:50:29.990Z",
            "timeout": 3000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #2",
          "subscriptions": [
            {
              "name": "tcp 2 subscription description",
              "type": "tcp-server",
              "tests": [
                {
                  "name": "It is still open",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'The socket is still open'. Received 'The socket is still open'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.993Z",
              "messageReceived": {
                "payload": {
                  "type": "Buffer",
                  "data": [
                    84,
                    104,
                    101,
                    32,
                    115,
                    111,
                    99,
                    107,
                    101,
                    116,
                    32,
                    105,
                    115,
                    32,
                    115,
                    116,
                    105,
                    108,
                    108,
                    32,
                    111,
                    112,
                    101,
                    110
                  ]
                }
              }
            }
          ],
          "publishers": [
            {
              "name": "Publisher #0",
              "valid": true,
              "type": "tcp-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Second message is enqueuer Rocks",
                  "valid": true,
                  "description": "Expected 'payload' to be equal to 'enqueuer Rocks'. Received 'enqueuer Rocks'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.994Z",
              "messageReceived": {
                "payload": "enqueuer Rocks"
              }
            }
          ],
          "time": {
            "totalTime": 2,
            "startTime": "2018-09-25T03:50:29.992Z",
            "endTime": "2018-09-25T03:50:29.994Z",
            "timeout": 3000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/avoid.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "tcp-server",
              "tests": [
                {
                  "valid": true,
                  "name": "Subscription avoided",
                  "description": "Avoidable subscription has not received any message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.040Z"
            }
          ],
          "publishers": [],
          "time": {
            "totalTime": 2001,
            "startTime": "2018-09-25T03:50:28.996Z",
            "endTime": "2018-09-25T03:50:30.997Z"
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/http.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #0",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "http-server",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "Expected 'JSON.parse(message.body).enqueuer' to be equal to 'virgs'. Received 'virgs'"
                },
                {
                  "name": "Params",
                  "valid": true,
                  "description": "Expected 'params.firstId' to be equal to 'idStuff'. Received 'idStuff'"
                },
                {
                  "name": "Query",
                  "valid": true,
                  "description": "Expected 'query.query' to be equal to '0'. Received '000'"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.055Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "content-length": "25",
                  "host": "localhost:23075",
                  "connection": "close"
                },
                "params": {
                  "firstId": "idStuff"
                },
                "query": {
                  "query": "000"
                },
                "body": "{\n  \"enqueuer\": \"virgs\"\n}"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "http-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Status Code",
                  "valid": true,
                  "description": "Expected 'statusCode' to be equal to '321'. Received '321'"
                },
                {
                  "name": "Body",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'dynamically changed payload'. Received 'dynamically changed payload'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.162Z",
              "messageReceived": {
                "statusCode": 321,
                "body": "dynamically changed payload",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "27",
                  "etag": "W/\"1b-e5esTWfu+XftewZ5g2Tclr7ClTo\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "http:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:23075",
                    "port": "23075",
                    "hostname": "localhost",
                    "hash": null,
                    "search": "?query=000",
                    "query": "query=000",
                    "pathname": "/enqueuer/idStuff",
                    "path": "/enqueuer/idStuff?query=000",
                    "href": "http://localhost:23075/enqueuer/idStuff?query=000"
                  },
                  "method": "post",
                  "headers": {
                    "content-type": "application/json",
                    "Content-Length": 25
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 158,
            "startTime": "2018-09-25T03:50:29.004Z",
            "endTime": "2018-09-25T03:50:29.162Z",
            "timeout": 3000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "Requisition #1",
          "subscriptions": [
            {
              "name": "Subscription #0",
              "type": "http-server",
              "tests": [
                {
                  "name": "Payload",
                  "valid": true,
                  "description": "'JSON.parse(message.body).duplicated' is not true. I swear"
                },
                {
                  "valid": true,
                  "name": "Message received",
                  "description": "Subscription has received its message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.165Z",
              "messageReceived": {
                "headers": {
                  "content-type": "application/json",
                  "content-length": "24",
                  "host": "localhost:23075",
                  "connection": "close"
                },
                "params": {
                  "secondId": "idStuff"
                },
                "query": {
                  "query": "111"
                },
                "body": "{\n  \"duplicated\": true\n}"
              }
            }
          ],
          "publishers": [
            {
              "name": "publisher description",
              "valid": true,
              "type": "http-client",
              "tests": [
                {
                  "name": "Published",
                  "valid": true,
                  "description": "Published successfully"
                },
                {
                  "name": "Status Code",
                  "valid": true,
                  "description": "Expected 'statusCode' to be equal to '321'. Received '321'"
                },
                {
                  "name": "Body",
                  "valid": true,
                  "description": "Expected 'body' to be equal to 'duplicatedResponsePayload'. Received 'duplicatedResponsePayload'"
                },
                {
                  "name": "Response message received",
                  "valid": true,
                  "description": "Response message was received"
                }
              ],
              "publishTime": "2018-09-25T03:50:29.198Z",
              "messageReceived": {
                "statusCode": 321,
                "body": "duplicatedResponsePayload",
                "headers": {
                  "x-powered-by": "Express",
                  "content-type": "text/html; charset=utf-8",
                  "content-length": "25",
                  "etag": "W/\"19-yZRAgggcER0sMyRTVBBpErTPT/A\"",
                  "date": "Tue, 25 Sep 2018 03:50:29 GMT",
                  "connection": "close"
                },
                "request": {
                  "uri": {
                    "protocol": "http:",
                    "slashes": true,
                    "auth": null,
                    "host": "localhost:23075",
                    "port": "23075",
                    "hostname": "localhost",
                    "hash": null,
                    "search": "?query=111",
                    "query": "query=111",
                    "pathname": "/enqueuer/idStuff",
                    "path": "/enqueuer/idStuff?query=111",
                    "href": "http://localhost:23075/enqueuer/idStuff?query=111"
                  },
                  "method": "post",
                  "headers": {
                    "content-type": "application/json",
                    "Content-Length": 24
                  }
                }
              }
            }
          ],
          "time": {
            "totalTime": 34,
            "startTime": "2018-09-25T03:50:29.164Z",
            "endTime": "2018-09-25T03:50:29.198Z",
            "timeout": 5000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "requisition 2 (port 23076)",
          "subscriptions": [
            {
              "name": "subscription description",
              "type": "http-server",
              "tests": [
                {
                  "valid": true,
                  "name": "Subscription avoided",
                  "description": "Avoidable subscription has not received any message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:29.203Z"
            }
          ],
          "publishers": [],
          "time": {
            "totalTime": 1004,
            "startTime": "2018-09-25T03:50:29.202Z",
            "endTime": "2018-09-25T03:50:30.206Z",
            "timeout": 5000
          },
          "requisitions": []
        },
        {
          "valid": true,
          "tests": [
            {
              "valid": true,
              "name": "No time out",
              "description": "Requisition has not timed out"
            }
          ],
          "name": "check port releasing (23076)",
          "subscriptions": [
            {
              "name": "same port subscription",
              "type": "tcp-server",
              "tests": [
                {
                  "valid": true,
                  "name": "Subscription avoided",
                  "description": "Avoidable subscription has not received any message"
                }
              ],
              "valid": true,
              "connectionTime": "2018-09-25T03:50:30.208Z"
            }
          ],
          "publishers": [],
          "time": {
            "totalTime": 1003,
            "startTime": "2018-09-25T03:50:30.208Z",
            "endTime": "2018-09-25T03:50:31.211Z",
            "timeout": 5000
          },
          "requisitions": []
        }
      ]
    },
    {
      "name": "examples/requisition.yml",
      "valid": true,
      "tests": [],
      "requisitions": [
        {
          "valid": true,
          "tests": [],
          "name": "iterations iterator collection",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "startTime": "2018-09-25T03:50:29.032Z",
            "endTime": "2018-09-25T03:50:29.165Z",
            "totalTime": 133
          },
          "requisitions": [
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [0]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 9,
                "startTime": "2018-09-25T03:50:29.032Z",
                "endTime": "2018-09-25T03:50:29.041Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [1]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 1,
                "startTime": "2018-09-25T03:50:29.066Z",
                "endTime": "2018-09-25T03:50:29.067Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [2]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.070Z",
                "endTime": "2018-09-25T03:50:29.070Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [3]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.082Z",
                "endTime": "2018-09-25T03:50:29.082Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [4]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.083Z",
                "endTime": "2018-09-25T03:50:29.083Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [5]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.096Z",
                "endTime": "2018-09-25T03:50:29.096Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [6]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.102Z",
                "endTime": "2018-09-25T03:50:29.102Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [7]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 1,
                "startTime": "2018-09-25T03:50:29.122Z",
                "endTime": "2018-09-25T03:50:29.123Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [8]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 0,
                "startTime": "2018-09-25T03:50:29.151Z",
                "endTime": "2018-09-25T03:50:29.151Z"
              },
              "requisitions": []
            },
            {
              "valid": true,
              "tests": [
                {
                  "name": "Assertion #0",
                  "valid": true,
                  "description": "'requisition.hakunaMatata' is not undefined"
                }
              ],
              "name": "iterations [9]",
              "subscriptions": [],
              "publishers": [],
              "time": {
                "totalTime": 1,
                "startTime": "2018-09-25T03:50:29.164Z",
                "endTime": "2018-09-25T03:50:29.165Z"
              },
              "requisitions": []
            }
          ]
        },
        {
          "valid": true,
          "tests": [
            {
              "name": "It was executed 10 times",
              "valid": true,
              "description": "Expected 'store.iteration' to be equal to '9'. Received '9'"
            },
            {
              "name": "It delayed for at least ~3 seconds",
              "valid": true,
              "description": "Expected 'delayedTime + 50' to be greater than '3000'. Received '3052'"
            },
            {
              "name": "It delayed for no more than ~3 seconds",
              "valid": true,
              "description": "Expected 'delayedTime - 500' to be less than '3000'. Received '2502'"
            },
            {
              "name": "Assertion #3",
              "valid": true,
              "description": "Expected 'requisition.anyStuff' to be equal to 'anyValue'. Received 'anyValue'"
            }
          ],
          "name": "delayed",
          "subscriptions": [],
          "publishers": [],
          "time": {
            "totalTime": 0,
            "startTime": "2018-09-25T03:50:32.166Z",
            "endTime": "2018-09-25T03:50:32.166Z"
          },
          "requisitions": []
        }
      ]
    }
  ]
}