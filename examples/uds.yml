-   timeout: 3000
    publishers:
        -   name: publisher description
            type: uds
            path: /tmp/unix.sock
            timeout: 2000
            payload: I'll be replaced in onInit
            onInit:
                script: publisher.payload = 'enqueuer'
                store:
                    udsPayload: `enqueuer`
                    uds2RequisitionName: `RequisitionUds2Name`
                    uds2Timeout: `2000`
                    uds2Name: `UDS2 Name`
            onMessageReceived:
                assertions:
                    -   name: It is bidirectional
                        expect: payload
                        toBeEqualTo: `responsePayload`
    subscriptions:
        -   type: uds
            path: /tmp/unix.sock
            response: responsePayload
            timeout: 2000
            onMessageReceived:
                assertions:
                    -   name: Message received is enqueuer
                        expect: payload
                        toBeEqualTo: store.udsPayload
-   name: <<uds2Name>> saver
    publishers:
        -   name: udsPublisher2 description
            type: uds
            path: /tmp/unix2.sock
            payload: <<udsPayload>>
            saveStream: udsPubStreamName
            onInit:
                assertions:
                    -   name: Message to be published is <<udsPayload>>
                        expect: publisher.payload
                        toBeEqualTo: store.udsPayload
    subscriptions:
        -   name: udsSubscription2 description
            type: uds
            path: /tmp/unix2.sock
            saveStream: udsSubStreamName
            onMessageReceived:
                assertions:
                    -   name: Message received is <<udsPayload>> 2
                        expect: message.payload
                        toBeEqualTo: store.udsPayload
            timeout: <<uds2Timeout>>
-   name: udsStreamLoader description
    publishers:
        -   name: udsStreamLoader publisher
            type: uds
            timeout: 2000
            payload: I am still opened
            loadStream: udsSubStreamName
            onMessageReceived:
                assertions:
                    -   name: Message received
                        expect: payload
                        toBeEqualTo: `I am still bidirectional`
    subscriptions:
        -   type: uds
            loadStream: udsPubStreamName
            response: I am still bidirectional
            onMessageReceived:
                assertions:
                    -   name: Publisher stream was still opened
                        expect: payload
                        toBeEqualTo: `I am still opened`
