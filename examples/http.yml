name: http test description
id: http
runnables:
- name: requisition 0 description
  timeout: 3000
  startEvent:
    publisher:
      name: publisher description
      type: http-client
      url: http://localhost:23075/enqueuer/idStuff?query=123
      method: POST
      payload:
        enqueuer: virgs
      headers:
        content-type: application/json
      authentication:
        basic:
          user: user
          password: password
      onMessageReceived:
        assertions:
        - name: Status Code
          expected: statusCode
          toBeEqualTo: 321
        - name: Body
          expected: body
          toBeEqualTo: `responsePayload`
  subscriptions:
  - name: subscription description
    type: http-server
    endpoint: /enqueuer/:someId
    port: 23075
    method: POST
    timeout: 10000
    authentication:
      basic:
        user: user
        password: password
    response:
      status: 321
      payload: responsePayload
    onMessageReceived:
      assertions:
      - name: Payload
        expected: JSON.parse(message.body).enqueuer
        toBeEqualTo: `virgs`
      - name: Params
        expected: params.someId
        toBeEqualTo: `idStuff`
      - name: Query
        expected: query.query
        toBeEqualTo: 123
- name: requisition 1 description
  timeout: 5000
  startEvent:
    publisher:
      name: publisher description
      type: http-client
      url: http://localhost:23075/enqueuer/idStuff?query=123
      method: POST
      payload:
        duplicated: true
      headers:
        content-type: application/json
      onMessageReceived:
        assertions:
        - name: Status Code
          expected: statusCode
          toBeEqualTo: 321
        - name: Body
          expected: body
          toBeEqualTo: `duplicatedResponsePayload`
  subscriptions:
  - name: subscription description
    type: http-server
    endpoint: /enqueuer/:someId
    port: 23075
    method: POST
    timeout: 10000
    response:
      status: 321
      payload: duplicatedResponsePayload
    onMessageReceived:
      assertions:
      - name: Payload
        toBeTruthy: JSON.parse(message.body).duplicated
- name: requisition 2 description
  timeout: 3000
  startEvent:
    publisher:
      name: publisher description
      type: https-client
      url: https://localhost:4430/enqueuer
      method: POST
      payload:
        https: works!
      headers:
        content-type: application/json
      onMessageReceived:
        assertions:
        - name: Status Code
          expected: statusCode
          toBeEqualTo: 200
        - name: Body
          expected: body
          toBeEqualTo: `https`
  subscriptions:
  - type: https-server
    name: subscription description
    endpoint: /enqueuer
    port: 4430
    method: POST
    timeout: 1000
    credentials: <<httpsCredentials>>
    response:
      status: 200
      payload: https
    onMessageReceived:
      assertions:
      - name: Https payload
        expected: JSON.parse(message.body).https
        toBeEqualTo: `works!`
