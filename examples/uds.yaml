name: runnableUDSName
id: uds
runnables:
- name: uds
  timeout: 3000
  startEvent:
    publisher:
      type: uds
      name: udsPublisher
      path: "/tmp/unix.sock"
      payload: I'll be replaced in 'onInit'
      onMessageReceived:
        script: |-
          tester.isEqualTo('It is bidirectional', message, 'responsePayload');
      onInit:
        script: |-
          const payload = 'enqueuer';
          store.udsPayload = payload;
          store.uds2RequisitionName = 'RequisitionUds2Name';
          store.uds2Timeout = '500';
          store.uds2Name = 'UDS2 Name';
          publisher.payload = store.udsPayload;
  subscriptions:
  - type: uds
    path: "/tmp/unix.sock"
    name: udsSubscription
    response: responsePayload
    timeout: 500
    onMessageReceived:
      assertions:
      - name: Message received is enqueuer
        expected: message
        isEqualTo: store.udsPayload
- name: <<uds2Name>>
  startEvent:
    publisher:
      type: uds
      name: udsPublisher2
      path: "/tmp/unix2.sock"
      payload: "{{udsPayload}}"
      saveStream: udsPubStreamName
      onInit:
        assertions:
        - name: Message to be published is {{udsPayload}}
          expected: publisher.payload
          isEqualTo: store.udsPayload
  subscriptions:
  - type: uds
    path: "/tmp/unix2.sock"
    saveStream: udsSubStreamName
    name: udsSubscription2
    onMessageReceived:
      assertions:
      - name: 'Message received is {{udsPayload}} 2'
        expected: message
        isEqualTo: store.udsPayload
    timeout: <<uds2Timeout>>
- name: udsStreamLoader
  startEvent:
    publisher:
      type: uds
      name: udsStreamLoader publisher
      payload: I am still opened
      loadStream: udsPubStreamName
      onMessageReceived:
      - name: 'Message received'
        expected: message
        isEqualTo: I am still bidirectional
  subscriptions:
  - type: uds
    name: udsStreamLoader subscription
    loadStream: udsSubStreamName
    response: I am still bidirectional
    onMessageReceived:
    - name: Publisher stream was still opened
      expected: message
      isEqualTo: I am still opened