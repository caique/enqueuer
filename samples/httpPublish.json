{
  "subscriptions": [
    {
      "protocol": "mqtt",
      "brokerAddress": "brokerAddress",
      "topic": "#",
      "onMessageReceivedFunctionBody": "report['startEvent'] = startEvent; test['true'] = true; test['false'] = false",
      "timeout": "5000"
    },
    {
      "protocol": "mqtt",
      "brokerAddress": "brokerAddress",
      "topic": "startEvent",
      "onMessageReceivedFunctionBody": "report['startEvent'] = startEvent; test['true'] = true; test['false'] = false",
      "timeout": "5000"
    },
    {
      "protocol": "mqtt",
      "brokerAddress": "brokerAddress",
      "topic": "anotherTopic",
      "onMessageReceivedFunctionBody": "report['startEvent'] = startEvent; test['true'] = true; test['false'] = false",
      "timeout": "5000"
    }
  ],
  "startEvent": {
    "publisher":
    {
      "protocol": "http",
      "onMessageReceivedFunctionBody": "report['startEvent'] = startEvent; test['true'] = true; test['false'] = false",
      "endpoint": "http://localhost:1880/input",
      "header": {},
      "method": "post",
      "payload": "PublishRest"
    },
    "timeout": "5000"
  },
  "reports" : [
    {
      "protocol": "standardOutput"
    },
    {
      "protocol": "file",
      "name": "outputFileNameReportBack"
    },
    {
      "protocol": "http",
      "endpoint": "http://localhost:1880/reports"
    },
    {
      "protocol": "mqtt",
      "brokerAddress": "brokerAddress",
      "topic": "service-to-be-tested/report"
    }
  ],
  "variables":
  {
    "brokerAddress": "mqtt://localhost"
  }
}