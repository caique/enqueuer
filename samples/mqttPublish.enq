{
  "subscriptions": [
      {
        "protocol": "mqtt",
        "brokerAddress": "brokerAddress",
        "topic": "mqttSubscription/a",
        "onMessageReceivedFunctionBody": "report['startEvent'] = message; test['true'] = true; test['false'] = false",
        "timeout": "100"
      },
      {
        "protocol": "mqtt",
        "brokerAddress": "brokerAddress",
        "topic": "mqttSubscription/#",
        "onMessageReceivedFunctionBody": "report['startEvent'] = message; test['true'] = true; test['false'] = false",
        "timeout": "500"
      },
      {
        "protocol": "mqtt",
        "brokerAddress": "brokerAddress",
        "topic": "mqttSubscription/anotherTopic",
        "onMessageReceivedFunctionBody": "report['startEvent'] = message; test['Valid'] = message == 'Valid'",
        "timeout": "3000"
      }
  ],
  "startEvent": {
    "publisher":
    {
        "protocol": "mqtt",
        "brokerAddress": "brokerAddress",
        "topic": "startEvent",
        "prePublishing": "report['startEvent'] = 'gui'; payload = 'novo'",
        "payload": "PublishMqtt"
    },
    "timeout": "5000"
  },
  "reports" : [
    {
      "protocol": "standardOutput"
    },
    {
      "protocol": "file",
      "name": "outputFileNameReportBack"
    },
    {
      "protocol": "http",
      "endpoint": "http://localhost:1880/reports"
    },
    {
      "protocol": "mqtt",
      "brokerAddress": "brokerAddress",
      "topic": "service-to-be-tested/report"
    }
  ],
  "variables":
  {
    "brokerAddress": "mqtt://localhost"
  }
}